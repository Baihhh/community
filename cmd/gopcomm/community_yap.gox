import (
	"github.com/goplus/community/internal/core"
	"github.com/goplus/community/markdown"
	"github.com/spf13/viper"
)

var (
	community *core.Community
)

get "/p/:id", ctx => {
	id := ctx.param("id")
	article, _ := community.article(nil, id)
	// html, _ := markdown.render(article.Content)
	ctx.yap "article", {
		"ID":    id,
		"Title": article.Title,
		"Body":  article.HtmlText,
	}
}
get "/", ctx => {
	articles, _, _ := community.listArticle(nil, core.MarkBegin, 20)
	ctx.yap "home", {
		"Items": articles,
	}
}
get "/edit", ctx => {
	// canEditable
	ctx.yap "edit", {
		"ID": ctx.param("id"),
	}
}
post "/commit", ctx => {
	// ...
}

viper.SetConfigFile("./config.yaml")
viper.AddConfigPath(".") 
// viper.ReadInConfig()?
if err := viper.ReadInConfig();err != nil { // 处理错误
	println err
	return
}

config := &core.Config{
	Mysql: core.Mysql{
		Ip:           viper.GetString("mysql.ip"),
		Port:         viper.GetInt("mysql.port"),
		Username:     viper.GetString("mysql.username"),
		Password:     viper.GetString("mysql.password"),
		Database:     viper.GetString("mysql.database"),
	},
}

// config := &core.Config{}
community, _ = core.New(config)
core.InitMysqlDB(config)

println "start"
run ":8080"