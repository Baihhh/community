import (
	"context"

	"github.com/goplus/community/internal/core"
	"github.com/goplus/community/markdown"
	"time"
)

var (
	community *core.Community
)

todo := context.TODO()

get "/p/:id", ctx => {
	id := ctx.param("id")
	article, _ := community.article(todo, id)
	ctx.yap "article", {
		"ID":      id,
		"Title":   article.Title,
		"Content": article.Content,
	}
}
get "/", ctx => {
	articles, _, _ := community.listArticle(todo, 0, 20)
	ctx.yap "home", {
		"Items": articles,
	}
}
get "/edit", ctx => {
	uid := ""
	id := ctx.param("id")
	doc := {
		"ID": id,
	}
	if id != "" {
		if editable, _ := community.canEditable(todo, uid, id); !editable {
			// TODO: can't edit this article
			println "no permissions"
			return
		}
		article, _ := community.article(todo, id)
		doc["Title"] = article.Title
		doc["Content"] = article.Content
	}
	ctx.yap "edit", doc
}
post "/commit", ctx => {
	uid := "12"
	id := ctx.param("id")
	article := &core.Article{
		ArticleEntry: core.ArticleEntry{
			ID:    id,
			Title: "Sample Title",
			UId:   "1",
			Cover: "sample_cover",
			Tags:  "tag1",
			Ctime: time.Now(),
			Mtime: time.Now(),
		},
		// Status:  1,
		Content: "Sample Markdown Content",
		// HtmlUrl: "/sample-html-url",
	}
	// TODO check author exist
	_, _ = community.putArticle(todo, uid, article)
	ctx.yap "edit", *article
}

conf := &core.Config{}
community, _ = core.New(todo, conf)

println "start"
run ":8080"
